package evacuation_Simulation;

import repast.simphony.context.space.continuous.ContinuousSpaceFactory;
import repast.simphony.context.space.continuous.ContinuousSpaceFactoryFinder;
import repast.simphony.context.space.grid.GridFactory;
import repast.simphony.context.space.grid.GridFactoryFinder;
import repast.simphony.space.continuous.ContinuousSpace;
import repast.simphony.space.continuous.RandomCartesianAdder;
import repast.simphony.space.grid.Grid;
import repast.simphony.space.grid.GridBuilderParameters;
import repast.simphony.space.grid.SimpleGridAdder;
import repast.simphony.space.grid.WrapAroundBorders;

public class Environment {
	ContinuousSpace<Object> space;
	
	public Environment(){
		// TODO change space
				ContinuousSpaceFactory spaceFactory = ContinuousSpaceFactoryFinder.createContinuousSpaceFactory(null);
				ContinuousSpace<Object> space = 
						spaceFactory.createContinuousSpace("space", context, new RandomCartesianAdder<Object>(), 
								new repast.simphony.space.continuous.WrapAroundBorders(), 50, 50);
				
				GridFactory gridFactory = GridFactoryFinder.createGridFactory(null);
				
				Grid<Object> grid = gridFactory.createGrid("grid", context,
						new GridBuilderParameters<Object>(new WrapAroundBorders(),
								new SimpleGridAdder<Object>(),
								true, 50, 50));
	}
	
}
