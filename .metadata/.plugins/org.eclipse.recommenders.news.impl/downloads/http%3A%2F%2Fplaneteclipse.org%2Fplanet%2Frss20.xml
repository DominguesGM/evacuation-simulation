<?xml version="1.0"?>
<rss version="2.0">

<channel>
	<title>Planet Eclipse</title>
	<link>http://planeteclipse.org/planet/</link>
	<language>en</language>
	<description>Planet Eclipse - http://planeteclipse.org/planet/</description>

<item>
	<title>itemis: Language development on .NET with Xtext – Part 2: Creating a .NET assembly from an Xtext DSL</title>
	<guid isPermaLink="true">https://blogs.itemis.com/en/language-development-on-.net-with-xtext-part-2-creating-a-dotnet-assembly-from-an-xtext-dsl</guid>
	<link>https://blogs.itemis.com/en/language-development-on-.net-with-xtext-part-2-creating-a-dotnet-assembly-from-an-xtext-dsl</link>
	<description>&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;In the first part of this blog series we have introduced an &lt;a href=&quot;https://hosting.itemis.de/en/language-development-on-.net-with-xtext-part-1-overview&quot;&gt;example use case of integrating an Xtext DSL in a C# command-line calculator&lt;/a&gt;. This post will go into the details of how to use Maven to create a .NET assembly containing the DSL and Xtext runtime classes which are necessary for writing the calculator application.&lt;/p&gt;  
&lt;p&gt;&lt;span&gt;After starting with an overview of the project structure, we will focus on how to create a .NET assembly by first constructing an Uber JAR that includes all dependencies and then converting it to an assembly using IKVM.NET. &lt;/span&gt;The &lt;a href=&quot;https://github.com/stadlerb/ikvm-arithmetics-cli&quot;&gt;source code&lt;/a&gt; of the project is available on GitHub.&lt;/p&gt; 
&lt;h2&gt;Project structure&lt;/h2&gt; 
&lt;p&gt;As build tool &lt;a href=&quot;https://www.itemis.com/en/xtext/&quot;&gt;Xtext&lt;/a&gt; offers the choice between &lt;a href=&quot;https://maven.apache.org&quot;&gt;Maven&lt;/a&gt; and &lt;a href=&quot;https://gradle.org&quot;&gt;Gradle&lt;/a&gt;. In this example, Maven is employed as the Gradle build has only been added recently and the Maven build is more stable.&lt;/p&gt; 
&lt;p&gt;The basic project structure conforms to Xtext's default Maven layout and consists of the root project &lt;code&gt;org.eclipse.xtext.example.arithmetics.parent&lt;/code&gt; and the Xtext DSL project &lt;code&gt;org.eclipse.xtext.example.arithmetics&lt;/code&gt;, which are generated by Xtext's New Project wizard.&lt;br /&gt;&lt;br /&gt;The root project is used as a parent project to specify shared configuration items and serves as an aggregator project that provides a single build for all sub-projects. The Xtext DSL project is essentially the Xtext Simple Arithmetics example, adapted for Maven and with a few improvements for the CLI calculator application. The &lt;code&gt;org.eclipse.example.arithmetics.dotnet&lt;/code&gt; project was manually created and is responsible for creating a .NET assembly (a &lt;code&gt;dll&lt;/code&gt; file) that can be used to consume the DSL in C#.&lt;/p&gt; 
&lt;p&gt;The project structure consisting of the root project and the child projects &lt;code&gt;org.eclipse.example.arithmetics&lt;/code&gt; and &lt;code&gt;org.eclipse.example.arithmetics.dotnet&lt;/code&gt; is summarized in the figure below:&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;Project structure&quot; src=&quot;https://github.com/itemis/itemis-blog/raw/ikvm-xtext-standalone/ikvm-xtext-standalone/project-structure.png&quot; style=&quot;width: 519px; display: block; margin-left: auto; margin-right: auto;&quot; title=&quot;Project structure&quot; width=&quot;519&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Creating a .NET assembly for consuming the DSL in C#&lt;/h2&gt; 
&lt;p&gt;Now that we have an overview of the project structure, we can direct our attention to the actual creation of the DLL, which consists of two steps: First creating an Uber JAR from all transitive dependencies of the &lt;code&gt;org.eclipse.example.arithmetics.dotnet&lt;/code&gt; project using the Maven Shade plugin and then converting the Uber JAR to a DLL as the project's main artifact using IKVM.NET.&lt;/p&gt; 
&lt;p&gt;In the following subsections we will provide a more detailed description of the DLL creation process.&lt;/p&gt; 
&lt;h2&gt;Creating a Uber JAR with the Shade plugin&lt;/h2&gt; 
&lt;p&gt;An Uber JAR is a JAR that includes a project and its direct and indirect dependencies and is produced by merging the JARs of the project and all its dependencies into a single, &quot;fat&quot; JAR.&lt;br /&gt;In order to create an Uber JAR from the dependencies of the dotnet project, we include the Shade plugin in the POM of the project, which performs the merging of all Maven dependencies into a Uber JAR.&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;Shade Plugin&quot; src=&quot;https://github.com/itemis/itemis-blog/raw/ikvm-xtext-standalone/ikvm-xtext-standalone/shade-plugin-1.png&quot; style=&quot;width: 728px; margin: 0px auto; display: block;&quot; title=&quot;Shade Plugin&quot; width=&quot;728&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;As shown in the figure above, we need to exclude the signature files from the creation of the Uber JAR, in order to avoid &lt;code&gt;SecurityException&lt;/code&gt;s that would be thrown at runtime because the signatures don't match anymore. The &lt;code&gt;&amp;lt;exclude&amp;gt;&lt;/code&gt; element for the &lt;code&gt;org.eclipse.example.arithmetics.dotnet&lt;/code&gt; project is added to prevent the Shade plugin from producing an error because it can't find the project's own JAR. This JAR doesn't exist due to the &lt;code&gt;pom&lt;/code&gt; packaging, which will be explained further below.&lt;/p&gt; 
&lt;p&gt;Now, in order to include the DSL project in the Uber JAR, we need to specify it as a dependency of the &lt;code&gt;org.eclipse.example.arithmetics.dotnet&lt;/code&gt; project, as illustrated in the following figure:&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;Dependencies&quot; src=&quot;https://github.com/itemis/itemis-blog/raw/ikvm-xtext-standalone/ikvm-xtext-standalone/project-dependencies.png&quot; style=&quot;width: 635px; margin: 0px auto; display: block;&quot; title=&quot;Dependencies&quot; width=&quot;635&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;org.eclipse.example.arithmetics&lt;/code&gt; dependency is declared as optional because otherwise, the JARs of all of its dependencies would be downloaded unnecessarily when building Maven projects that depend on the &lt;code&gt;org.eclipse.example.arithmetics.dotnet&lt;/code&gt; project.&lt;/p&gt; 
&lt;h2&gt;Converting the Uber JAR to a .NET assembly with IKVM&lt;/h2&gt; 
&lt;p&gt;After creating the Uber JAR in the previous step, we can use IKVM.NET to convert it to a .NET assembly. As there is no currently maintained (or working) Maven plugin for IKVM.NET, we use the &lt;code&gt;exec-maven-plugin&lt;/code&gt; in order to invoke the IKVM.NET compiler.&lt;/p&gt; 
&lt;p&gt;As a preparation for this to work, we need to download the &lt;a href=&quot;http://www.frijters.net/ikvmbin-8.1.5717.0.zip&quot;&gt;latest release of IKVM.NET&lt;/a&gt; and extract it to some location.&lt;/p&gt; 
&lt;p&gt;By default, we use the directory &lt;code&gt;ikvm&lt;/code&gt; in the user's home folder, so that &lt;code&gt;ikvmc.exe&lt;/code&gt; would be available under &lt;code&gt;C:\Users\&amp;lt;username&amp;gt;\ikvm\bin\ikvmc.exe&lt;/code&gt; on Windows systems.&lt;br /&gt;By defining the IKVM.NET location as a Maven property as illustrated below, this default location can be overridden using &lt;code&gt;-Dikvm.home=&amp;lt;directory&amp;gt;&lt;/code&gt; later during the invocation of Maven:&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;Maven properties&quot; src=&quot;https://github.com/itemis/itemis-blog/raw/ikvm-xtext-standalone/ikvm-xtext-standalone/ikvm-properties-1.png&quot; style=&quot;width: 514px; display: block; margin-left: auto; margin-right: auto;&quot; title=&quot;Maven properties&quot; width=&quot;514&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;Based on this, we can specify the execution of &lt;code&gt;ikvmc.exe&lt;/code&gt; using the &lt;code&gt;exec&lt;/code&gt; goal of the &lt;code&gt;exec-maven-plugin&lt;/code&gt; plugin.&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;Invoking IKVM.NET&quot; src=&quot;https://github.com/itemis/itemis-blog/raw/ikvm-xtext-standalone/ikvm-xtext-standalone/ikvm-compile-1.png&quot; style=&quot;width: 728px;&quot; title=&quot;Invoking IKVM.NET&quot; width=&quot;728&quot; /&gt;&lt;/p&gt; 
&lt;p&gt;We specify the project's &lt;code&gt;target&lt;/code&gt; directory as working directory and pass parameters to create a DLL from the JAR.&lt;/p&gt; 
&lt;h2&gt;.NET Assembly as Maven artifact&lt;/h2&gt; 
&lt;p&gt;As the DLL is the &lt;code&gt;org.eclipse.example.arithmetics.dotnet&lt;/code&gt; project's main artifact, but Maven has no built-in support specific for .NET assemblies, we have to use a workaround:&lt;br /&gt;&lt;br /&gt;We specify the project's packaging to be &lt;code&gt;pom&lt;/code&gt;, which means that technically the &lt;code&gt;pom.xml&lt;/code&gt; itself is the project's primary artifact, and then use the the &lt;code&gt;attach-artifact&lt;/code&gt; goal of the &lt;code&gt;build-helper-maven-plugin&lt;/code&gt; to tell Maven to attach the DLL as a supplementary artifact. On this way, the DLL gets installed in the Maven repository when the Maven &lt;code&gt;install&lt;/code&gt; goal is built and can be used by other projects by adding &lt;code&gt;&amp;lt;type&amp;gt;dll&amp;lt;/type&amp;gt;&lt;/code&gt; to the dependency declaration.&lt;/p&gt; 
&lt;p&gt;The resulting plugin configuration is illustrated below:&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;Attaching the .NET assembly&quot; src=&quot;https://github.com/itemis/itemis-blog/raw/ikvm-xtext-standalone/ikvm-xtext-standalone/ikvm-attach-dll-1.png&quot; style=&quot;width: 722px; display: block; margin-left: auto; margin-right: auto;&quot; title=&quot;Attaching the .NET assembly&quot; width=&quot;722&quot; /&gt;&lt;/p&gt; 
&lt;h2&gt;Running the build&lt;/h2&gt; 
&lt;p&gt;Now, we can run the build using the MS Build command prompt from the parent directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;    mvn clean install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There may be several warnings regarding missing classes, which can be safely ignored.&lt;br /&gt;The resulting DLL will be placed in the &lt;code&gt;target&lt;/code&gt; directory.&lt;/p&gt; 
&lt;h2&gt;Conclusion&lt;/h2&gt; 
&lt;p&gt;In this part of the series, we have described how to transform an Xtext DSL project into a .NET assembly which is ready for use in a C# application.&lt;/p&gt; 
&lt;p&gt;The next blog entry will demonstrate how to use this assembly to create a command-line calculator application.&lt;/p&gt;  
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://track.hubspot.com/__ptq.gif?a=761475&amp;amp;k=14&amp;amp;r=https%3A%2F%2Fblogs.itemis.com%2Fen%2Flanguage-development-on-.net-with-xtext-part-2-creating-a-dotnet-assembly-from-an-xtext-dsl&amp;amp;bu=https%253A%252F%252Fblogs.itemis.com&amp;amp;bvt=rss&quot; style=&quot;width: 1px!important;&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Thu, 03 Nov 2016 07:48:44 +0000</pubDate>
	<author>stadler@itemis.de (Bernhard Stadler)</author>
</item>
<item>
	<title>typefox.io: How to Embed a Monaco Editor in a Browser as a Part of My First Task at TypeFox</title>
	<guid isPermaLink="false">http://typefox.io/?p=13874</guid>
	<link>http://typefox.io/how-to-embed-a-monaco-editor-in-a-browser-as-a-part-of-my-first-task-at-typefox</link>
	<description>&lt;p&gt;Hi there, this is Akos. I am the new one at TypeFox, and within this post, I would like to describe you what was my first task after joining TypeFox. Namely, how to embed the &lt;a href=&quot;https://microsoft.github.io/monaco-editor/&quot;&gt;Monaco Editor&lt;/a&gt; in the web browser and how to support a simple expression language from the browser using the &lt;a href=&quot;https://github.com/Microsoft/language-server-protocol&quot;&gt;Language Server Protocol&lt;/a&gt; (LSP).&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;monaco_example_add&quot; class=&quot;alignnone size-full wp-image-13910&quot; height=&quot;300&quot; src=&quot;http://typefox.io/wp-content/uploads/2016/11/monaco_example_add.gif&quot; width=&quot;1452&quot; /&gt;&lt;/p&gt;
&lt;p&gt;I came from the Java world; I did Eclipse plug-in development in the last couple of years. Although I also worked with Java EE technologies and created rich web based applications with various frameworks such as JBoss Seam and Vaadin I never really had to deal with the JavaScript part because the currently used technology somehow magically took care of them under the hood and I had to deal rather with the Java code. Embedding the Monaco Editor was a bit more complicated task and required some additional JavaScript and TypeScript knowledge. Besides that, I also used Gradle, &lt;a href=&quot;http://webpack.github.io/docs/what-is-webpack.html&quot;&gt;Webpack&lt;/a&gt;, and npm.&lt;/p&gt;
&lt;p&gt;First and foremost, what is the Monaco Editor? The Monaco Editor is a browser-based code editor that powers &lt;a href=&quot;https://github.com/Microsoft/vscode&quot;&gt;VS Code&lt;/a&gt;. It supports cool features such as syntax and semantic validation, content assist, syntax coloring, parameter hints, hover, and &lt;a href=&quot;https://code.visualstudio.com/docs/editor/editingevolved&quot;&gt;much more&lt;/a&gt; out of the box. It is well-documented and relatively easy to connect with a language server and integrate into your projects.&lt;/p&gt;
&lt;p&gt;The first thing I needed for this task is the Xtext implementation of the language server. This server is available from the &lt;a href=&quot;http://typefox.io/xtext-2-11-beta-1-is-here&quot;&gt;2.11.0.beta1&lt;/a&gt; milestone version of Xtext and depends on a lightweight library: &lt;a href=&quot;https://github.com/TypeFox/ls-api&quot;&gt;ls-api&lt;/a&gt;. This library is a simple Java binding for the LSP and is going to be replaced by the &lt;a href=&quot;https://projects.eclipse.org/proposals/lsp4j&quot;&gt;LSP4J&lt;/a&gt; Eclipse project in the future. By default, the Xtext language server supports various features, such as content proposals, hover, mark occurrences, and find references, which one can use for almost any kind of DSLs without any further customizations. Besides that, there are a couple of additional features that require custom implementation; for instance the signature helper which provides parameter hints. Usually, one single language is supported by one server; however, the Xtext server is capable of supporting multiple Xtext languages at the same time. The only requirement is that the actual implementation of the language should be available from the classpath of the server as a bundled jar.&lt;/p&gt;
&lt;p&gt;I had to prepare some generic glue code that acts as a web socket server endpoint and handles the lifecycle of the Xtext language server instance associated with the web socket session. On session-open event, it creates a new server instance and caches it and indeed on the web socket session-close event it shuts down the server and removes it from the cache. Besides that, to be able to support Guice based dependency injection in RESTful web services I used the &lt;a href=&quot;https://github.com/Squarespace/jersey2-guice&quot;&gt;jersey2-guice&lt;/a&gt; library which supports DI within the Jersey 2.x implementation of the &lt;a href=&quot;https://jcp.org/en/jsr/detail?id=311&quot;&gt;JAX-RS/JSR-311&lt;/a&gt; specification.&lt;/p&gt;
&lt;p&gt;Once the server-side was ready, and our DSL was available on the classpath, I had to implement a language-specific signature helper. I added some tests and switched to the client-side code. On the client-side, I used mostly TypeScript with some additional JavaScript code and invoked Webpack to compile TypeScript to JavaScript and to build the dependency graph with all of my static assets to create one single uglified JavaScript file for the browser. The client code is responsible for creating a web socket and connecting to the Xtext language server. Once the connection is successfully established between the client and server, the language gets registered into a new Monaco Editor instance. Right after the editor instantiation, both the syntax coloring and the auto-bracket insertion was configured in the client code. Currently, the LSP does not support syntax coloring, so this had to be added to the JavaScript code.&lt;/p&gt;
&lt;p&gt;The last remaining part of this task was to build a web-archive file and deploy it. Since not all environments have installed Node.js on it, an individual Node.js task was added to the Gradle configuration to install Node.js with npm. Npm can install Webpack and Webpack can gather all modules and their direct and transitive dependencies reading the content of the package.json of our module. Finally, Gradle creates a war file which can be optionally deployed on a Tomcat server using the &lt;a href=&quot;https://github.com/akhikhl/gretty&quot;&gt;Gretty&lt;/a&gt; Gradle plug-in.&lt;/p&gt;
&lt;p&gt;This example web-based Monaco Editor, which was presented at &lt;a href=&quot;https://www.eclipsecon.org/europe2016/session/language-server-protocol-explained&quot;&gt;EclipseCon Europe&lt;/a&gt; last week, is available &lt;a href=&quot;http://monaco-demo.typefox.io/&quot;&gt;here&lt;/a&gt;. We are planning to make both the generic glue code (used for the server) and the Monaco Editor code accessible in the future. Once the code is available under the EPL 1.0 license, we’ll come back to you with another blog post with all the technical details and pitfalls. If you cannot wait, feel free to drop me a mail.&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;div class=&quot;fusion-button-wrapper&quot;&gt;&lt;a class=&quot;fusion-button button-flat button-round button-large button-default button-1&quot; href=&quot;http://monaco-demo.typefox.io&quot; target=&quot;_self&quot;&gt;&lt;span class=&quot;fusion-button-text&quot;&gt;Try the Monaco Demo&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;</description>
	<pubDate>Wed, 02 Nov 2016 08:40:05 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: EclipseCon Europe: A Great Week for All</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/L6TL93Gcs9M/</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/L6TL93Gcs9M/</link>
	<description>Thanks to the sponsors, speakers, and attendees who made EclipseCon Europe 2016 such a success. Missed some talks? We'll post the YouTube playlist soon.&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/L6TL93Gcs9M&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Mon, 31 Oct 2016 15:00:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Eclipse Newsletter - Discover Eclipse Runtimes</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/aFUwHYND83c/</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/aFUwHYND83c/</link>
	<description>This month's newsletter features Eclipse runtime projects: Equinox, Golo, Jetty, OMR, and Vert.x.&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/aFUwHYND83c&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Mon, 31 Oct 2016 14:20:00 +0000</pubDate>
</item>
<item>
	<title>Eclipse Announcements: Eclipse IoT Announces Third Edition of the Open IoT Challenge</title>
	<guid isPermaLink="true">http://feedproxy.google.com/~r/eclipse/fnews/~3/Y1gd5rTpzFw/openiotchallenge3.php</guid>
	<link>http://feedproxy.google.com/~r/eclipse/fnews/~3/Y1gd5rTpzFw/openiotchallenge3.php</link>
	<description>IoT enthusiast? This Challenge is for you! Submit your IoT solution proposal by November 25.&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://feeds.feedburner.com/~r/eclipse/fnews/~4/Y1gd5rTpzFw&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Mon, 31 Oct 2016 13:30:00 +0000</pubDate>
</item>
<item>
	<title>Maximilian and Jonas: Save the date: Eclipse DemoCamp 05.12.2016</title>
	<guid isPermaLink="false">http://eclipsesource.com/blogs/?p=27389</guid>
	<link>http://eclipsesource.com/blogs/2016/10/31/save-the-date-eclipse-democamp-05-12-2016/</link>
	<description>&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;We are pleased to invite you to participate to the Eclipse DemoCamp Munich 2016. Like in the past years, we continue in our tradition of hosting a “Christmas DemoCamp”. Please save the following date and mark your calendars on December 5th 2016 for the next Eclipse DemoCamp in Munich!  &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;We offer 80 seats, but we usually receive around 200 registrations. &lt;strong&gt;To give everybody the same chance, registration for the event will start exactly on November 7th 2016 2pm.&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;More details on the event and the possibility to register you will find here:&lt;br /&gt;
&lt;/span&gt;&lt;a href=&quot;https://www.eventbrite.de/e/eclipse-democamp-december-2016-tickets-28833687335&quot;&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;https://www.eventbrite.de/e/eclipse-democamp-december-2016-tickets-28833687335&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;If you are interested in giving a talk, please send your presentation proposal to &lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;jhelming@eclipsesource.com for consideration. There are always more proposals than slots in the agenda, so we will make a selection from submitted proposals.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;We are looking forward to your registration and seeing you in December!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;display: inline-block;&quot;&gt;&lt;a href=&quot;https://twitter.com/intent/tweet?source=webclient&amp;amp;text=Save+the+date%3A+Eclipse+DemoCamp+05.12.2016&amp;amp;via=eclipsesource&amp;amp;url=http://eclipsesource.com/blogs/2016/10/31/save-the-date-eclipse-democamp-05-12-2016/&quot; style=&quot;margin-right: 5px;&quot; target=&quot;_blank&quot; title=&quot;Share on Twitter&quot;&gt;&lt;img alt=&quot;Twitter&quot; src=&quot;http://eclipsesource.com/blogs/wp-content/plugins/custom-about-author/images/social_media/twitter.png&quot; title=&quot;Twitter&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://plus.google.com/share?url=http://eclipsesource.com/blogs/2016/10/31/save-the-date-eclipse-democamp-05-12-2016/&quot; style=&quot;margin-right: 5px;&quot; target=&quot;_blank&quot; title=&quot;+1&quot;&gt;&lt;img alt=&quot;Google+&quot; src=&quot;http://eclipsesource.com/blogs/wp-content/plugins/custom-about-author/images/social_media/google_plus.png&quot; title=&quot;Google+&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;http://www.linkedin.com/cws/share?url=http://eclipsesource.com/blogs/2016/10/31/save-the-date-eclipse-democamp-05-12-2016/&quot; style=&quot;margin-right: 5px;&quot; target=&quot;_blank&quot; title=&quot;Share on LinkedIn&quot;&gt;&lt;img alt=&quot;LinkedIn&quot; src=&quot;http://eclipsesource.com/blogs/wp-content/plugins/custom-about-author/images/social_media/linkedin.png&quot; title=&quot;LinkedIn&quot; /&gt;&lt;/a&gt;&lt;a href=&quot;https://www.facebook.com/sharer/sharer.php?u=http://eclipsesource.com/blogs/2016/10/31/save-the-date-eclipse-democamp-05-12-2016/&amp;amp;t=Save+the+date%3A+Eclipse+DemoCamp+05.12.2016&quot; style=&quot;margin-right: 5px;&quot; target=&quot;_blank&quot; title=&quot;Facebook&quot;&gt;&lt;img alt=&quot;Facebook&quot; src=&quot;http://eclipsesource.com/blogs/wp-content/plugins/custom-about-author/images/social_media/facebook.png&quot; title=&quot;Facebook&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;a href=&quot;http://eclipsesource.com/blogs/2016/10/31/save-the-date-eclipse-democamp-05-12-2016/#respond&quot;&gt;Leave a Comment&lt;/a&gt;. Tagged with &lt;a href=&quot;http://eclipsesource.com/blogs/tag/democamp/&quot; title=&quot;democamp Tag&quot;&gt;democamp&lt;/a&gt;, &lt;a href=&quot;http://eclipsesource.com/blogs/tag/eclipse/&quot; title=&quot;eclipse Tag&quot;&gt;eclipse&lt;/a&gt;, &lt;a href=&quot;http://eclipsesource.com/blogs/tag/emf-forms/&quot; title=&quot;emf forms Tag&quot;&gt;emf forms&lt;/a&gt;, &lt;a href=&quot;http://eclipsesource.com/blogs/tag/democamp/&quot; title=&quot;democamp Tag&quot;&gt;democamp&lt;/a&gt;, &lt;a href=&quot;http://eclipsesource.com/blogs/tag/eclipse/&quot; title=&quot;eclipse Tag&quot;&gt;eclipse&lt;/a&gt;, &lt;a href=&quot;http://eclipsesource.com/blogs/tag/emf-forms/&quot; title=&quot;emf forms Tag&quot;&gt;emf forms&lt;/a&gt;&lt;p&gt;&lt;/p&gt;</description>
	<pubDate>Mon, 31 Oct 2016 13:00:55 +0000</pubDate>
</item>
<item>
	<title>Christian Pontesegger: Oomph 05: Git checkout</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-3460102793186140898.post-5266772667005025328</guid>
	<link>http://codeandme.blogspot.com/2016/10/oomph-05-git-checkout.html</link>
	<description>In this tutorial we will checkout a git repository and import its projects into the workspace.&lt;br /&gt;&lt;br /&gt;Source code for this tutorial is available on github as a &lt;a href=&quot;https://github.com/Pontesegger/codeandme/blob/master/Code%20&amp;amp;%20Me%20Blog/oomph_05_git_checkout.zip?raw=true&quot;&gt;single zip archive&lt;/a&gt;, as a &lt;a href=&quot;https://github.com/Pontesegger/codeandme/blob/master/Code%20&amp;amp;%20Me%20Blog/oomph_05_git_checkout.psf?raw=true&quot;&gt;Team Project Set&lt;/a&gt; or you can &lt;a href=&quot;https://github.com/Pontesegger/codeandme/tree/master/oomph/05_git_checkout&quot; target=&quot;_blank&quot;&gt;browse the files&lt;/a&gt; online.   &lt;br /&gt;&lt;br /&gt;For a list of all Oomph related tutorials see my &lt;a href=&quot;http://codeandme.blogspot.co.at/p/oomph-articles.html&quot; target=&quot;_blank&quot;&gt;Oomph Tutorials Overview&lt;/a&gt;.&lt;br /&gt;&lt;u&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/u&gt;&lt;u&gt;&lt;b&gt;Step 1: Git clone task&lt;/b&gt;&lt;/u&gt;&lt;br /&gt;&lt;br /&gt;First open your &lt;i&gt;CodeAndMe.setup&lt;/i&gt; file and look for a new child called &lt;i&gt;Git Clone&lt;/i&gt;. Quite likely you will find it under &lt;i&gt;Additional Tasks&lt;/i&gt;. All tasks available under that submenu are currently not installed. By selecting them eclipse triggers a background job to install the necessary components. Before you can use it a restart of your workbench will be required.&lt;br /&gt;&lt;br /&gt;Once you added a &lt;i&gt;Git Clone&lt;/i&gt; task open its &lt;i&gt;Properties&lt;/i&gt;. The bare minimum information to provide is the &lt;i&gt;Remote URI&lt;/i&gt;. Set it to your clone location, eg. https://github.com/Pontesegger/codeandme.git&lt;br /&gt;&lt;br /&gt;We will also provide an &lt;i&gt;ID&lt;/i&gt; so we can reference that setup task from other tasks later during the install. Therefore set &lt;i&gt;ID&lt;/i&gt; to &lt;i&gt;codeandme.git.clone&lt;/i&gt;.&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://4.bp.blogspot.com/-gIuyHT5JOAA/WATIiiyPRKI/AAAAAAAAAs0/0z-s1CX_FGUMk0gF5Z-dYxrJXxv_bQMqgCLcB/s1600/oomph_05_01.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://4.bp.blogspot.com/-gIuyHT5JOAA/WATIiiyPRKI/AAAAAAAAAs0/0z-s1CX_FGUMk0gF5Z-dYxrJXxv_bQMqgCLcB/s1600/oomph_05_01.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;The checkout &lt;i&gt;Location&lt;/i&gt; is typically chosen by the user and should not be defined in the setup file. Users will set this during installation by using the &lt;i&gt;Git clone location rule&lt;/i&gt; variable.&lt;br /&gt;&lt;u&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/u&gt;&lt;u&gt;&lt;b&gt;Step 2: Import projects&lt;/b&gt;&lt;/u&gt;&lt;br /&gt;&lt;br /&gt;The clone task will create a local copy of the repository but that does not mean that its projects are already visible in the workspace.&lt;br /&gt;&lt;br /&gt;We need to add a dedicated &lt;i&gt;Projects Import&lt;/i&gt; task. Further add a subnode of type &lt;i&gt;Source Locator&lt;/i&gt; to it. Now switch to its &lt;i&gt;Properties&lt;/i&gt; and set the &lt;i&gt;Root Folder&lt;/i&gt;. Instead of providing a fixed location here we will refer to the Git Clone task we defined earlier.&lt;br /&gt;&lt;br /&gt;When a task has an ID, we can refer to it directly using a variable: ${task.id}. Further all task properties are available by just adding the property name: ${task.id.property_name}.&lt;br /&gt;&lt;br /&gt;To get the path where our git repository was checked out to we can use: ${codeandme.git.clone.location}&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://3.bp.blogspot.com/-xwRX2IO2rSk/WATJDX2zDJI/AAAAAAAAAs4/QaPUtATB1KQZ_Z5n17ZvL0wjW-JvPSbpgCLcB/s1600/oomph_05_02.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://3.bp.blogspot.com/-xwRX2IO2rSk/WATJDX2zDJI/AAAAAAAAAs4/QaPUtATB1KQZ_Z5n17ZvL0wjW-JvPSbpgCLcB/s1600/oomph_05_02.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;Give it a try to see that your task configuration is correct.&lt;br /&gt;&lt;br /&gt;</description>
	<pubDate>Mon, 31 Oct 2016 10:24:40 +0000</pubDate>
	<author>noreply@blogger.com (Christian Pontesegger)</author>
</item>
<item>
	<title>Melanie Bats: Sirius 4.1 is Out! What’s Inside ? Sadness</title>
	<guid isPermaLink="false">http://melb.enix.org/?p=404</guid>
	<link>http://melb.enix.org/sirius/sirius-4-1-is-out-whats-inside-sadness/</link>
	<description>&lt;p dir=&quot;ltr&quot;&gt;That’s too sad! &lt;a href=&quot;https://www.eclipsecon.org/europe2016/&quot;&gt;EclipseCon Europe&lt;/a&gt; finished yesterday.&lt;img alt=&quot;&quot; class=&quot;aligncenter&quot; height=&quot;163&quot; src=&quot;https://lh5.googleusercontent.com/TPpOymkpFHaoSaG6PaO6QOx-pkEHfyb30AJXutJRvzseHcYrVLjXqjHvLW6RmEtLL-XQLhaNwdAXJ5ZLoTbcite9ThdRFPFMAvWAAKw7YbJU2XAB9AkGH-QqFwd-feKlnP9VSjCZ&quot; style=&quot;font-weight: 300;&quot; width=&quot;180&quot; /&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;It was again a great conference, with inspiring talks and excellent discussions with different members of the Eclipse community. These moments with our community are motivating us to prepare the future of &lt;a href=&quot;https://www.eclipse.org/sirius&quot;&gt;Eclipse Sirius&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt; &lt;span style=&quot;font-weight: 300;&quot;&gt;So what’s next? What would we cook for you in Eclipse Oxygen?&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;&lt;img alt=&quot;3ba14416270031.5632259d47f7e.jpg&quot; class=&quot;aligncenter&quot; height=&quot;518px;&quot; src=&quot;https://lh5.googleusercontent.com/86Q-tucOegM1hBilPjX7MnVz799SAXs06VYsr00cG0vfvG6yuYIQd4KOsh8JBcRZ39CNjlMBiNEe2B55ZVn8LAZr24oH_fhcntTu3CxBIN3_fsQ2DoXhzIKQWEPRnXJIudqgAIrUTJM&quot; width=&quot;481px;&quot; /&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;font-weight: 300;&quot;&gt;As we already said in our talk, we are already preparing the future with Sirius 4.1 when we introduce the &lt;em&gt;DRepresentationDescriptor&lt;/em&gt;. This internal change has no impact on normal users: it was made as a first step to &lt;strong&gt;prepare for better scalability&lt;/strong&gt; down the road. For specifiers and developers who wrote code that depends on the internal organisation of the *.aird files, you may need to adapt your code.&lt;/span&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;To learn more about the Sirius roadmap, be sure to not missed Cedric’s talk at &lt;a href=&quot;http://www.siriuscon.org/&quot;&gt;SiriusCon&lt;/a&gt;.&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;aligncenter&quot; height=&quot;365&quot; src=&quot;https://lh3.googleusercontent.com/gMyJVnQOtgkYSQqj-GrFnmxLwmRNKrB1j2UNDgYoKJw3bIyY3NDYf3CBx3N-AFKe9FInu0jWqeptY63fX3VsqHoaxijTFHodZt2wh3t3stErq1NZ0boxgaA-B_jiRNiF9DbGo6w_&quot; width=&quot;408&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style=&quot;font-weight: 300;&quot;&gt;I will also give a talk with Stéphane specifically about the Properties view feature, we will detail what’s possible with this new feature:&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;Let Sirius automatically create default properties views for your designer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;Create a simple properties view description and customize it as you do for other types of representations thanks to the following widgets: label, text, text area, checkbox, radio, list, reference&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;Use the new EMF.Edit customizations provided by Sirius&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;Discover the power of the dynamic mappings to automatically create the properties view fields for the different types of elements used in your metamodels&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;Understand how to provide filters and validation programmatically&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p dir=&quot;ltr&quot;&gt;&lt;span style=&quot;font-weight: 300;&quot;&gt;Learn how to contribute some custom widgets&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p dir=&quot;ltr&quot;&gt;And much more!&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Do not look for excuses, SiriusCon is where you have to be if you are interested in graphical modeling: easy to come as it will be held in Paris near the tour Eiffel, it’s a one day event, and it’s free. The &lt;a href=&quot;http://www.siriuscon.org/#program&quot;&gt;program&lt;/a&gt; promises to be interesting with talks about case studies on the morning, technical sessions by the afternoon and a clinic all the day.&lt;/p&gt;
&lt;p&gt;I am counting on you &lt;a href=&quot;http://www.siriuscon.org/register.php&quot;&gt;being there&lt;/a&gt; on November 15th and I hope to see you soon at SiriusCon!&lt;/p&gt;</description>
	<pubDate>Fri, 28 Oct 2016 05:30:51 +0000</pubDate>
</item>
<item>
	<title>Pascal Rapicault: 5 reasons to use EGerrit - #3, In-place comments</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-27225531.post-4283871304406313285</guid>
	<link>http://prapicault.blogspot.com/2016/10/5-reasons-to-use-egerrit-3-in-place.html</link>
	<description>To celebrate the release of &lt;a href=&quot;http://wiki.eclipse.org/EGerrit/New_and_Noteworthy/1.1.1&quot;&gt;EGerrit 1.1&lt;/a&gt;, we are enumerating the &lt;a href=&quot;http://prapicault.blogspot.ca/2016/10/5-reasons-to-use-egerrit-5-being-in.html&quot;&gt;top&lt;/a&gt; &lt;a href=&quot;http://prapicault.blogspot.com/2016/10/5-reasons-to-use-egerrit-4-simple.html&quot;&gt;5&lt;/a&gt; features of the tool.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;&lt;b&gt;Reason #3 – In-place comments.&lt;/b&gt;&lt;/h3&gt;Performing a review means commenting. As you go through the changes, you want to enter comments right here and there, and this can be done directly from the compare editor! Simply start typing in the editor and you will see the new text appear with a yellow background indicating that this is a comment (see picture).&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;http://2.bp.blogspot.com/-trTf7rtUngI/WA9ybxR53mI/AAAAAAAAAUU/gSLYvjNJdik51PrR4lOXtYrwCrcKBJtywCK4B/s1600/800px-Compare1.0.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;360&quot; src=&quot;https://2.bp.blogspot.com/-trTf7rtUngI/WA9ybxR53mI/AAAAAAAAAUU/gSLYvjNJdik51PrR4lOXtYrwCrcKBJtywCK4B/s640/800px-Compare1.0.png&quot; width=&quot;640&quot; /&gt;&lt;/a&gt;&lt;/div&gt;Saving the editor will push the comments as drafts.  Of course comments that have been entered by other users are also shown in place. &lt;br /&gt;You can download EGerrit from the &lt;a href=&quot;http://download.eclipse.org/releases/neon&quot; target=&quot;_blank&quot;&gt;Neon release &lt;/a&gt;repo or from the &lt;a href=&quot;http://marketplace.eclipse.org/content/egerrit&quot; target=&quot;_blank&quot;&gt;Eclipse Marketplace&lt;/a&gt;. For questions, you can connect with us on &lt;a href=&quot;https://dev.eclipse.org/mailman/listinfo/egerrit-dev&quot;&gt;egerrit-dev@eclipse.org&lt;/a&gt;; and for bugs or to take a peek at the future you can see our &lt;a href=&quot;https://tuleap.eclipse.org/plugins/agiledashboard/?group_id=102&amp;amp;action=showKanban&amp;amp;id=6#/kanban&quot; target=&quot;_blank&quot;&gt;Kanban board&lt;/a&gt;.</description>
	<pubDate>Fri, 28 Oct 2016 05:30:24 +0000</pubDate>
	<author>noreply@blogger.com (Pascal)</author>
</item>
<item>
	<title>Jeremie Bresson: Asciidoctor instead of MediaWiki?</title>
	<guid isPermaLink="true">http://jmini.github.io/blog/2016/2016-10-28_from_mediawiki_to_asciidoc.html</guid>
	<link>http://jmini.github.io/blog/2016/2016-10-28_from_mediawiki_to_asciidoc.html</link>
	<description>&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;During &lt;a href=&quot;https://www.eclipsecon.org/europe2016/&quot;&gt;EclipseCon Europe 2016&lt;/a&gt; we had a great BoF Session about documentation with Asciidoctor at Eclipse. A lot of subjects were discussed, from the editing possibilities inside or outside Eclipse IDE to the best toolchains for document generation/customization.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;imageblock&quot;&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;img alt=&quot;BoFs Session Schedule at EclipseCon Europe 2016&quot; src=&quot;http://jmini.github.io/blog/2016/2016-10-28_bofs_eclipsecon_europe_2016.jpg&quot; /&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;One topic that was discussed during the meeting was the conversion of MediaWiki documentation to the AsciiDoc format. I am happy to blog about this topic and to propose a solution.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;A lot of Eclipse projects are using the &lt;a href=&quot;https://wiki.eclipse.org/&quot;&gt;Eclipse MediaWiki instance&lt;/a&gt; for their documentation. Maybe I can summarize my vision on this topic: I consider the usage of a Git repository better as a wiki engine. A wiki engine is not enough when it comes to documentation of different versions of your project/product (git branches, cherry pick…​). If you host the repository on GitHub (it works also with GitLab) and if you use one of the markup syntaxes supported by the online editor, you get almost the same experience as with a wiki engine (online edition, online preview of changes, navigation in the history, diffs…​). Reviews and discussions inside pull requests are a great way to collaborate. Having also everything offline is a big plus (I work a lot in the train). Amongst the different markup syntaxes you can choose, I consider the AsciiDoc format as the best option (management of code snippets, callout support in listings blocs, variable substitution and conditional inclusion, multiple output formats, live preview in browser during edition in any text editor, easy integration in existing build toolchain, possibility to extend the language with custom macros…​). In my opinion Asciidoctor is becoming a state of the art documentation toolchain in many projects.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;This immediately raises the next question: what can we do with the great content we have on the Eclipse wiki? How can it be migrated to the AsciiDoc format? In my opinion the &lt;a href=&quot;https://eclipse.org/mylyn/docs&quot;&gt;Mylyn Wikitext project&lt;/a&gt; can help, but an &lt;code&gt;AsciiDocDocumentBuilder&lt;/code&gt; is missing. I have opened &lt;a href=&quot;https://bugs.eclipse.org/bugs/show_bug.cgi?id=506643&quot;&gt;Bug 506643&lt;/a&gt; for that and &lt;a href=&quot;https://git.eclipse.org/r/84040&quot;&gt;contributed&lt;/a&gt; a first implementation. My code will now go through the eclipse review process. To test it today, you need to check out the repo (and the corresponding gerrit change).&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Here a simple example:&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;title&quot;&gt;
  Listing 1. Example MediaWiki document
 &lt;/div&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;'''Lorem ipsum''' sed tempor euismod elit, et eleifend tellus lacinia a.

=== Penatibus et magnis

Pellentesque ut ''lorem lorem''.

[[Image:foo.png|Foo image]]

Nulla ut sapien tellus. Quisque id semper nulla. Nullam facilisis risus turpis.

* Cras posuere tempor urna
* Laoreet pharetra diam rhoncus at
* Quisque ornare diam eu iaculis auctor.

Pellentesque tincidunt ultricies varius. [http://eclipse.org/ Lorem ipsum dolor] sit amet, consectetur adipiscing elit.

Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Suspendisse potenti.&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;That will be converted to:&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;listingblock&quot;&gt; 
 &lt;div class=&quot;title&quot;&gt;
  Listing 2. Result of the conversion to AsciiDoc
 &lt;/div&gt; 
 &lt;div class=&quot;content&quot;&gt; 
  &lt;pre&gt;*Lorem ipsum* sed tempor euismod elit, et eleifend tellus lacinia a.

=== Penatibus et magnis

Pellentesque ut _lorem lorem_.

image:foo.png[title=&quot;Foo image&quot;]

Nulla ut sapien tellus. Quisque id semper nulla. Nullam facilisis risus turpis.

* Cras posuere tempor urna
* Laoreet pharetra diam rhoncus at
* Quisque ornare diam eu iaculis auctor.

Pellentesque tincidunt ultricies varius. link:http://eclipse.org/[Lorem ipsum dolor] sit amet, consectetur adipiscing elit.

Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Suspendisse potenti.&lt;/pre&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;Of course my tool has certainly some limitations. Markup conversion is never an easy task. I think that the MediaWiki parser provided by the Mylyn Wikitext project is a good choice, because it is already used for the generation of some eclipse help pages. For the conversion to AsciiDoc there is already some support in the Wikitext framework (AsciiDoc is just an other output Markup there). I just created a new class: &lt;code&gt;AsciiDocDocumentBuilder&lt;/code&gt; (plus an other one for the test suite). I have used the &lt;code&gt;MarkdownDocumentBuilder&lt;/code&gt; as base and adapted it for AsciiDoc. I consider my implementation as a first usable version. Any feedback is welcomed (on the Bug, on Gerrit, twitter or on the mailing list). Depending on the feedback, I will be happy to iterate and to improve it for concrete use cases.&lt;/p&gt; 
&lt;/div&gt; 
&lt;div class=&quot;paragraph&quot;&gt; 
 &lt;p&gt;By the way, if an Eclipse Project wants to migrate and start to use Asciidoctor, I will be happy to help as much as I can.&lt;/p&gt; 
&lt;/div&gt;</description>
	<pubDate>Thu, 27 Oct 2016 22:00:00 +0000</pubDate>
</item>
<item>
	<title>Melanie Bats: Sirius 4.1 is Out! What’s Inside ? Anger</title>
	<guid isPermaLink="false">http://melb.enix.org/?p=399</guid>
	<link>http://melb.enix.org/sirius/sirius-4-1-is-out-whats-inside-anger/</link>
	<description>&lt;p dir=&quot;ltr&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;aligncenter&quot; height=&quot;199&quot; src=&quot;https://lh5.googleusercontent.com/i-BbA6KpaRVD8UnMMUT6OtGUdDJO7ZyRe-lz-Ck0Bn8n1Gf7zR7m516l9UYGDteWGPboc8KDH3bkfqZgXKhO9KqFXApNZco_LjfjEy4kKPaRg5vf44MifWSusoSdaSWyVEvhY0cu&quot; style=&quot;font-weight: 300;&quot; width=&quot;160&quot; /&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Do you ever feel that? This week I often dreamt I had the gift of ubiquity… I could replicate myself and be in several places at once. It would be a really useful skill to participate to EclipseCon Europe. I am angry to not be able to see all the talks I would have liked to attend. Happily, as every year all the slides will be available on the EclipseCon website and most of the talks are recorded and will be available on the Eclipse Foundation &lt;a href=&quot;https://www.youtube.com/user/EclipseFdn&quot;&gt;youtube channel&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you missed our talk yesterday, do not miss our &lt;a href=&quot;https://www.eclipsecon.org/europe2016/session/sirius-41-let-me-sirius-you&quot;&gt;slides available online&lt;/a&gt;.&lt;/p&gt;</description>
	<pubDate>Thu, 27 Oct 2016 05:30:49 +0000</pubDate>
</item>
<item>
	<title>itemis: BMW builds AUTOSAR backbone with open source projects sponsored by itemis</title>
	<guid isPermaLink="true">https://blogs.itemis.com/en/bmw-builds-autosar-backbone-with-open-source-projects-sponsored-by-itemis</guid>
	<link>https://blogs.itemis.com/en/bmw-builds-autosar-backbone-with-open-source-projects-sponsored-by-itemis</link>
	<description>&lt;p&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;On &lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;September 28th the &lt;/span&gt;&lt;span style=&quot;font-weight: 400;&quot;&gt;9th AUTOSAR Open Conference took place in Gothenburg.&lt;/span&gt; From an Eclipse/Open Source point of view, &lt;a href=&quot;http://www.autosar.org/fileadmin/files/events/2016-09-28-9th-autosar-open/AUTOSAR_Methodology%40BMW_JAEGER.pdf&quot;&gt;Bernd Jäger's (BMW) talk on their Symphony project&lt;/a&gt; is very interesting.&lt;/p&gt;  
&lt;p&gt;&lt;span&gt;BMW&lt;/span&gt;&lt;span&gt; has built&lt;/span&gt; the impressive AUTOSAR ECU engineering backbone with Eclipse open source technologies. Engineering data is consolidated from different data sources, merged in a big common model and then exported to AUTOSAR.&lt;/p&gt; 
&lt;p&gt;Bernd Jäger mentions in his slides a few projects and I am happy to see that some of them are sponsored mainly or in part by itemis. Let us have a look, what the benefits of some of these technologies are.&lt;/p&gt; 
&lt;h3&gt;Xtend: F&lt;span&gt;lexible and expressive Java-dialect&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;Obviously, we can infer that there are a lot of model-to-model transformations. &lt;a href=&quot;http://www.eclipse.org/xtend/&quot;&gt;Xtend&lt;/a&gt; supports these transformations with its &quot;create&quot; statements that help a lot to avoid caching and multiple passes. Also, you can create strong transformator frameworks &lt;span&gt;with active annotations&lt;/span&gt;. In addition, its concise syntax and lambda support makes it a better Java-dialect – not only for transformations but for any code. &lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;Xtext: Develop applications based on text based languages&lt;/span&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;span&gt;&lt;a href=&quot;https://www.itemis.com/en/xtext/&quot;&gt;Xtext&lt;/a&gt; supports the creation of textual domain specific languages. It can be used e.g. to easily create parsers for input files that follow a textual syntax (e.g. a LIN description file - .ldf). In addition, you can create languages for modifying, managing and serializing EMF models. This helps e.g. in creating test data.&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;Artop: Sphinx based framework &lt;/h3&gt; 
&lt;p&gt;As the common platform for Eclipse/Java based AUTOSAR tooling &lt;a href=&quot;https://www.artop.org/&quot;&gt;Artop&lt;/a&gt; provides you with an implementation of the AUTOSAR metamodel, complete with (de-) serialization to ARXML. It is the most convenient way to read, process and write AUTOSAR.&lt;/p&gt; 
&lt;h3&gt;Sphinx: Eclipse Modeling Framework-Extension&lt;/h3&gt; 
&lt;p&gt;Artop is based on &lt;a href=&quot;https://www.eclipse.org/sphinx/&quot;&gt;Sphinx&lt;/a&gt; – a powerful open source project that manages complex models and adds a strong framework on top of the modelling supported by Eclipse EMF.&lt;/p&gt; 
&lt;p&gt;All of the technologies above have been created and/or are maintained with the involvement of itemis. It is great to see the acceptance they find in the automotive industry.&lt;/p&gt; 
&lt;p&gt;If you want to know more about the open source projects of itemis &lt;a href=&quot;https://info.itemis.com/contact?__hstc=83779017.a36a44f00bd630b3220478611fe98670.1454924626084.1465284155385.1473676857046.90&amp;amp;hsCtaTracking=5bfa286f-1bcd-462e-8dcf-6e73e33ef0bf%7Cd40f815c-2dea-4ff7-a656-4ee1abaa433d&quot;&gt;don't hesitate to get in touch with us!&lt;/a&gt;&lt;/p&gt;  
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://track.hubspot.com/__ptq.gif?a=761475&amp;amp;k=14&amp;amp;r=https%3A%2F%2Fblogs.itemis.com%2Fen%2Fbmw-builds-autosar-backbone-with-open-source-projects-sponsored-by-itemis&amp;amp;bu=https%253A%252F%252Fblogs.itemis.com&amp;amp;bvt=rss&quot; style=&quot;width: 1px!important;&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Wed, 26 Oct 2016 10:37:28 +0000</pubDate>
	<author>graf@itemis.de (Andreas Graf)</author>
</item>
<item>
	<title>Christian Pontesegger: ECE 2016: Elevate your IDE with scripts</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-3460102793186140898.post-6561843788357367156</guid>
	<link>http://codeandme.blogspot.com/2016/10/ece-2016-elevate-your-ide-with-scripts.html</link>
	<description>Being at EclipseCon Europe for me is always a highlight throughout the year. While I am enjoying the talks and discussions (and some beer) you might be interested in what to expect from &lt;a href=&quot;https://www.eclipsecon.org/europe2016/session/elevate-your-ide-scripts&quot; target=&quot;_blank&quot;&gt;my talk&lt;/a&gt; on &lt;a href=&quot;https://www.eclipse.org/ease/&quot; target=&quot;_blank&quot;&gt;EASE &lt;/a&gt;today:&lt;br /&gt;&lt;br /&gt;Well I guess lots of you are already familiar with the basic concept of running scripts in Eclipse. Therefore the talk will focus on scripts that augment the IDE (or any other RCP application) in special ways. We will use them to add toolbar and menu items, we will create a custom builder prototype, learn something about the Event Broker and finally have a look at script deployment methods. Therefore we will use a generic keyword mechanism which can be extended easily to your own needs.&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;a href=&quot;https://4.bp.blogspot.com/-8syg5m-cOmE/VIHE9VTtFpI/AAAAAAAAAgk/vWIxHfxmn5EImfx-KL1-A57Gb4Yn9Kh4QCPcB/s1600/explore2.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; src=&quot;https://4.bp.blogspot.com/-8syg5m-cOmE/VIHE9VTtFpI/AAAAAAAAAgk/vWIxHfxmn5EImfx-KL1-A57Gb4Yn9Kh4QCPcB/s1600/explore2.png&quot; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Even if you do not care about scripting but prefer pure Java this talk might be for you. Using EASE you may extend the IDE without deployment of features (and without a restart).&lt;br /&gt;&lt;br /&gt;As I am a big fan of live sessions we will rush through some slides in 3 minutes and use the rest for a live demo. &lt;br /&gt;&lt;br /&gt;Got your interest? Join me on Wednesday, 11:45 at Silchersaal.</description>
	<pubDate>Wed, 26 Oct 2016 08:03:16 +0000</pubDate>
	<author>noreply@blogger.com (Christian Pontesegger)</author>
</item>
<item>
	<title>Lars Vogel: Dependency injection for Eclipse 3.x views available for Eclipse 4.7 M3</title>
	<guid isPermaLink="false">http://blog.vogella.com/?p=7501</guid>
	<link>http://blog.vogella.com/2016/10/26/dependency-injection-for-eclipse-3-x-views-available-for-eclipse-4-7-m3/</link>
	<description>&lt;p&gt;You can now use dependency injection (di) in your Eclipse 3.x. views.You can enable this for a view via the new &lt;b&gt;inject&lt;/b&gt; flag in the &lt;code&gt;org.eclipse.ui.views&lt;/code&gt; extension.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.vogella.com/wp-content/uploads/2016/10/e3-views-enable-di.png&quot;&gt;&lt;img alt=&quot;e3-views-enable-di&quot; class=&quot;aligncenter size-full wp-image-7503&quot; height=&quot;344&quot; src=&quot;http://blog.vogella.com/wp-content/uploads/2016/10/e3-views-enable-di.png&quot; width=&quot;450&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;br /&gt;
public class SampleView extends ViewPart {&lt;/code&gt;&lt;/p&gt;&lt;code&gt;
&lt;p&gt;	@Inject IWorkbench workbench;&lt;/p&gt;
&lt;p&gt;	private TableViewer viewer;&lt;/p&gt;
&lt;p&gt;	@Override&lt;br /&gt;
	public void createPartControl(Composite parent) {&lt;br /&gt;
		viewer = new TableViewer(parent, SWT.MULTI | SWT.H_SCROLL | SWT.V_SCROLL);&lt;/p&gt;
&lt;p&gt;		viewer.setContentProvider(ArrayContentProvider.getInstance());&lt;br /&gt;
		viewer.setInput(new String[] { &quot;One&quot;, &quot;Two&quot;, &quot;Three&quot; });&lt;br /&gt;
		viewer.setLabelProvider(new ViewLabelProvider());&lt;/p&gt;
&lt;/code&gt;&lt;p&gt;&lt;code&gt;		// Create the help context id for the viewer's control&lt;br /&gt;
		workbench.getHelpSystem().setHelp(viewer.getControl(), &quot;test7.viewer&quot;);&lt;br /&gt;
	}&lt;br /&gt;
	// more stuff&lt;br /&gt;
}&lt;br /&gt;
&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I hope that this will help Eclipse IDE extenders to move towards the Eclipse 4.x programming approach. &lt;/p&gt;</description>
	<pubDate>Wed, 26 Oct 2016 07:30:43 +0000</pubDate>
</item>
<item>
	<title>Melanie Bats: Sirius 4.1 is Out! What’s Inside ? Fear</title>
	<guid isPermaLink="false">http://melb.enix.org/?p=396</guid>
	<link>http://melb.enix.org/sirius/sirius-4-1-is-out-whats-inside-fear/</link>
	<description>&lt;p dir=&quot;ltr&quot;&gt;&lt;img alt=&quot;&quot; class=&quot;aligncenter&quot; height=&quot;243&quot; src=&quot;https://lh6.googleusercontent.com/wB9zXLWn-UnBqWesAJQLqVWYnvfd1N07Zb3R6b-ZGEe-kXaEEKbCxhZWuTOH7piIAUjLSOLV-C9GmppvSfFpvS3nWx6h2_NglUsm-eTGKAr9tcMe71MRuOYRucLIF0wcMCC-frtl&quot; width=&quot;155&quot; /&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;Wednesday will be a huge day for &lt;a href=&quot;https://www.obeo.fr/en/&quot;&gt;Obeo&lt;/a&gt; at &lt;a href=&quot;https://www.eclipsecon.org/europe2016&quot;&gt;EclipseCon Europe 2016&lt;/a&gt;. You will find &lt;a href=&quot;https://www.eclipsecon.org/europe2016/program/sessions/accepted?keys=sirius&amp;amp;field_experience_value=All&amp;amp;field_session_type_tid=All&quot;&gt;several talks about Eclipse Sirius&lt;/a&gt; in the program, and one thing for you, you have to attend our talk about &lt;a href=&quot;https://www.eclipsecon.org/europe2016/session/sirius-41-let-me-sirius-you&quot;&gt;Sirius 4.1: Let Me Sirius That For You!&lt;/a&gt;&lt;/p&gt;
&lt;p dir=&quot;ltr&quot;&gt;As usual when I have to give a talk I am a little frightened but in fact I love this feeling which pushes me to do my best &lt;img alt=&quot;:)&quot; class=&quot;wp-smiley&quot; src=&quot;http://melb.enix.org/wp-includes/images/smilies/icon_smile.gif&quot; /&gt; &lt;/p&gt;
&lt;p&gt;Our slides are ready, our demo is exciting, now we just need you at Theater Stage – Wednesday, October 26, 2016 – 16:00.&lt;/p&gt;</description>
	<pubDate>Wed, 26 Oct 2016 05:30:10 +0000</pubDate>
</item>
<item>
	<title>Pascal Rapicault: 5 reasons to use EGerrit - #4, Simple checkout</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-27225531.post-2677203353301958020</guid>
	<link>http://prapicault.blogspot.com/2016/10/5-reasons-to-use-egerrit-4-simple.html</link>
	<description>To celebrate the release of &lt;a href=&quot;http://wiki.eclipse.org/EGerrit/New_and_Noteworthy/1.1.1&quot;&gt;EGerrit 1.1&lt;/a&gt;, we are enumerating the top 5 features of the tool. After last week's &lt;a href=&quot;http://prapicault.blogspot.ca/2016/10/5-reasons-to-use-egerrit-5-being-in.html&quot;&gt;#5 - Being in Eclipse&lt;/a&gt;, this week reason is simple checkout.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;&lt;b&gt;Reason #4 – Simple checkout.&lt;/b&gt;&lt;/h3&gt;Reviews often need to be downloaded to be examined in depth. For efficiency, EGerrit allows to download the code by the push of a button. &lt;a href=&quot;http://4.bp.blogspot.com/-J8i_kqF4yGA/WA9tfugcZzI/AAAAAAAAAUE/kw5Y1X0Gs4wuVsZaD1-Cefoe9hDl7x7ZgCK4B/s1600/Download.png&quot; style=&quot;margin-left: 1em; margin-right: 1em;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;140&quot; src=&quot;https://4.bp.blogspot.com/-J8i_kqF4yGA/WA9tfugcZzI/AAAAAAAAAUE/kw5Y1X0Gs4wuVsZaD1-Cefoe9hDl7x7ZgCK4B/s400/Download.png&quot; width=&quot;400&quot; /&gt;&lt;/a&gt;&lt;br /&gt;You can find this button in two places: in the EGerrit dashboard (see picture), where it will always cause the most recent revision to be downloaded, and in the editor where you can chose the revision to download.  &lt;br /&gt; You can download EGerrit from the &lt;a href=&quot;http://download.eclipse.org/releases/neon&quot; target=&quot;_blank&quot;&gt;Neon release &lt;/a&gt;repo or from the &lt;a href=&quot;http://marketplace.eclipse.org/content/egerrit&quot; target=&quot;_blank&quot;&gt;Eclipse Marketplace&lt;/a&gt;. For questions, you can connect with us on &lt;a href=&quot;https://dev.eclipse.org/mailman/listinfo/egerrit-dev&quot;&gt;egerrit-dev@eclipse.org&lt;/a&gt;; and for bugs or to take a peek at the future you can see our &lt;a href=&quot;https://tuleap.eclipse.org/plugins/agiledashboard/?group_id=102&amp;amp;action=showKanban&amp;amp;id=6#/kanban&quot; target=&quot;_blank&quot;&gt;Kanban board&lt;/a&gt;.</description>
	<pubDate>Tue, 25 Oct 2016 14:42:03 +0000</pubDate>
	<author>noreply@blogger.com (Pascal)</author>
</item>
<item>
	<title>Alex Blewitt: EclipseCon 2016: Optimising Eclipse Plug-ins</title>
	<guid isPermaLink="false">http://alblue.bandlem.com/2016/10/eclipsecon-books</guid>
	<link>http://alblue.bandlem.com/2016/10/eclipsecon-books.html</link>
	<description>&lt;p&gt;It doesn’t seem that long ago since I was &lt;a href=&quot;http://alblue.bandlem.com/2013/11/eclipsecon-success.html&quot;&gt;last at EclipseCon Europe&lt;/a&gt;,
but time has flown by – and my hair has gone even more grey 👴🏻
– someone complained that my headshot was out of date!&lt;/p&gt;

&lt;p&gt;In any case, as with last time, I’ve managed to negotiate a discount on
my newest Eclipse book – Eclipse Plug-in Development for Beginners, 2nd ed –
which came out &lt;a href=&quot;http://alblue.bandlem.com/2016/08/eclipse-book-second-edition.html&quot;&gt;earlier this year&lt;/a&gt;.
You can get 30% off the eBook until the end of October with CONECD30,
or you can reach out to me via &lt;a href=&quot;https://twitter.com/alblue&quot;&gt;@alblue&lt;/a&gt; on Twitter if you’re interested&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;center&quot; src=&quot;http://alblue.bandlem.com/2016/10/EclipseConBooks.jpg&quot; title=&quot;EclipseCon Books Giveaway&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’ve also got a pair of my Eclipse Plug-in books (Eclipse Plug-in Development,
second edition, and Mastering Eclipse Plug-in Development) that I’m going to
give away to someone randomly chosen from those who
&lt;a href=&quot;https://twitter.com/alblue/status/790894457835118593&quot;&gt;retweet this link&lt;/a&gt; 🐦,
and will hand it out after
&lt;a href=&quot;https://www.eclipsecon.org/europe2016/session/optimising-eclipse-plug-ins&quot;&gt;my session on Thursday before lunchtime&lt;/a&gt;.
I’ll tweet out the winner of the books before my session starts, and you can
meet me at the Bürgersaal 2 room at 11:35 or shortly thereafter.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://alblue.bandlem.com/2016/10/EclipseFlameGraph.png&quot; title=&quot;Eclipse Flame Graph&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My session is on optimising Eclipse plug-ins; a generally useful overview
for how to optimise Java programs generally, but also tailored to some of
the specifics that affect Eclipse and OSGi applications. I’ll talk about
how to measure Eclipse’s use with Java Flight Recorder and Memory Analyzer
Toolkit, as well as touching on YourKit and Censum as well. Slides will be
available on &lt;a href=&quot;https://speakerdeck.com/alblue/&quot;&gt;my speakerdeck&lt;/a&gt;
profile afterwards. I’m also happy to have a discussion over lunch in more
detail if anyone is interested.&lt;/p&gt;</description>
	<pubDate>Tue, 25 Oct 2016 12:00:00 +0000</pubDate>
</item>
<item>
	<title>itemis: Language development on .NET with Xtext – Part 1: Overview</title>
	<guid isPermaLink="true">https://blogs.itemis.com/en/language-development-on-.net-with-xtext-part-1-overview</guid>
	<link>https://blogs.itemis.com/en/language-development-on-.net-with-xtext-part-1-overview</link>
	<description>&lt;p&gt;This blog series will illustrate the integration of a simple Xtext DSL within a .NET command-line application written in C# by using the Java-to-.NET translator &lt;a href=&quot;https://www.ikvm.net/&quot;&gt;IKVM.NET&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In this first part of the series, we will give an overview of the example use case, a command-line calculator.&lt;br /&gt;&lt;/p&gt; 
&lt;h3&gt;Introduction &lt;/h3&gt; 
&lt;p&gt;Developing a textual DSL in .NET is a tedious process consisting of manually defining data structures and writing a grammar with actions to construct syntax trees, symbol tables, basic validations and so on.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;http://www.xtext.org/&quot;&gt;Xtext&lt;/a&gt; automatizes a large part of the process of DSL creation: By writing an Xtext grammar, one doesn't only get a parser and a serializer, but also abstract syntax trees and the corresponding classes, syntax validations and cross-references to other EMF models. Apart from the generated classes, Xtext includes a runtime library which provides an extensive infrastructure of re-usable, customizable services for handling DSL models.&lt;/p&gt; 
&lt;h3&gt;Use case overview&lt;/h3&gt; 
&lt;p&gt;To demonstrate the integration, we start with a DSL developed with Xtext – in this case a language for simple arithmetical expressions and functions. A snippet of this language's grammar is listed below.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/itemis/itemis-blog/blob/ikvm-xtext-standalone/ikvm-xtext-standalone/grammar.png&quot;&gt;&lt;img alt=&quot;C# Interpreter&quot; src=&quot;https://github.com/itemis/itemis-blog/raw/ikvm-xtext-standalone/ikvm-xtext-standalone/grammar.png&quot; style=&quot;display: block; margin-left: auto; margin-right: auto;&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;From the grammar Xtext generates a parser which maps DSL instances to Java objects. For example, the parser would map the expression &lt;code&gt;1 + 2&lt;/code&gt; to an instance of the generated class &lt;code&gt;Plus&lt;/code&gt; whose &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; properties are &lt;code&gt;NumberLiteral&lt;/code&gt;s with &lt;code&gt;value = 1&lt;/code&gt; and &lt;code&gt;value = 2&lt;/code&gt;, respectively.&lt;/p&gt; 
&lt;p&gt;Based on this, we will write a C# interpreter for evaluating the arithmetical expressions of our DSL and a command-line interface to the interpreter, in order to show that it's possible to embed Xtext DSLs in .NET applications by consuming them in C# programs and thus avoid most of the tedious work connected with parser development.&lt;/p&gt; 
&lt;p&gt;In order to realize this embedding, we first convert the DSL's generated Java classes and the runtime libraries to a .NET assembly. To do this, we build an &lt;a href=&quot;http://stackoverflow.com/a/11947093/512227&quot;&gt;Uber JAR&lt;/a&gt; containing all these classes and their dependencies using Maven and the &lt;a href=&quot;https://maven.apache.org/plugins/maven-shade-plugin/&quot;&gt;Maven Shade Plugin&lt;/a&gt;, and then invoke IKVM.NET from Maven to create a DLL from the JAR. Then, we can reference this DLL from a C# project and use the classes originally written in Java in our C# application.&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://github.com/itemis/itemis-blog/blob/ikvm-xtext-standalone/ikvm-xtext-standalone/csharp-interpreter.png&quot;&gt;&lt;img alt=&quot;C# Interpreter&quot; src=&quot;https://github.com/itemis/itemis-blog/raw/ikvm-xtext-standalone/ikvm-xtext-standalone/csharp-interpreter.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The figure above illustrates the integration of the Xtext DSL in C# – it shows a part of the interpreter, whose purpose is to evaluate an arithmetical expression (input parameter type &lt;code&gt;Expression&lt;/code&gt;), with a number (&lt;code&gt;BigDecimal&lt;/code&gt;) as result. In the &lt;code&gt;evaluate&lt;/code&gt; method, we dispatch by expression class, such that for a &lt;code&gt;Plus&lt;/code&gt;, first the left and right summand are evaluated and the results are added with &lt;code&gt;add&lt;/code&gt;, and similarly for &lt;code&gt;Minus&lt;/code&gt; and so on.&lt;/p&gt; 
&lt;h3&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://github.com/itemis/itemis-blog/blob/ikvm-xtext-standalone/ikvm-xtext-standalone/ikvm-standalone-1.md#running-the-example&quot;&gt;&lt;/a&gt;Running the example&lt;/h3&gt; 
&lt;p&gt;In order to run the example, download the &lt;a href=&quot;https://github.com/stadlerb/ikvm-arithmetics-cli/releases/download/1.0.0-preview20161018/calculate-1.0.0-preview20161018.zip&quot;&gt;binary distribution&lt;/a&gt; and unzip it, e.g. to &lt;code&gt;C:\apps&lt;/code&gt; on Windows. The execulable file is called &lt;code&gt;calculate.exe&lt;/code&gt;. It can be used either with in-line expressions using the &lt;code&gt;-e&lt;/code&gt; switch or with input files using the &lt;code&gt;-f&lt;/code&gt; switch. For importing modules, the files containing the module have to be added using the &lt;code&gt;-i &lt;/code&gt;switch (multiple files separated by colons).&lt;/p&gt; 
&lt;p&gt;Examples are:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;    C:\apps\calculate&amp;gt;calculate.exe -e &quot;2 + 3&quot;
    - 2 + 3: 5

    C:\apps\calculate&amp;gt;calculate.exe -i example\polynomialexample.calc:example\linearexample.calc ^
    -e &quot;examplepolynomial(4,7) ; examplepolynomial(weightedsum(3, 4), 19)&quot;
    - examplepolynomial(4, 7): 73
    - examplepolynomial(weightedsum(3, 4), 19): 1665

    C:\apps\calculate&amp;gt;calculate.exe -i example\linearexample.calc -f example\evaluation.calc
    - weightedsum(10, 12): 80
    - weightedsum(0, 1): 5
    - (weightedsum(1, 0)): 2
    - 15 * 44 + 12: 672
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;a class=&quot;anchor&quot; href=&quot;https://github.com/itemis/itemis-blog/blob/ikvm-xtext-standalone/ikvm-xtext-standalone/ikvm-standalone-1.md#conclusion&quot;&gt;&lt;/a&gt;Conclusion&lt;/h3&gt; 
&lt;p&gt;In this post we have sketched a way of integrating Xtext developed DSLs into the .NET platform by using IKVM.NET, which allows to consume Xtext generated classes in a C# program. The following blog entries of this series will provide more detail regarding the creation of the .NET assembly and the integration into the C# application.&lt;/p&gt;  
&lt;img alt=&quot;&quot; height=&quot;1&quot; src=&quot;http://track.hubspot.com/__ptq.gif?a=761475&amp;amp;k=14&amp;amp;r=https%3A%2F%2Fblogs.itemis.com%2Fen%2Flanguage-development-on-.net-with-xtext-part-1-overview&amp;amp;bu=https%253A%252F%252Fblogs.itemis.com&amp;amp;bvt=rss&quot; style=&quot;width: 1px!important;&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Tue, 25 Oct 2016 09:45:39 +0000</pubDate>
	<author>stadler@itemis.de (Bernhard Stadler)</author>
</item>
<item>
	<title>Karsten Thoms: EclipseCon Europe 2016 – I’m coming!</title>
	<guid isPermaLink="false">http://kthoms.wordpress.com/?p=725</guid>
	<link>https://kthoms.wordpress.com/2016/10/23/eclipsecon-europe-2016-im-coming/</link>
	<description>&lt;p&gt;&lt;a href=&quot;https://www.eclipsecon.org/europe2016/user/185&quot; target=&quot;_blank&quot;&gt;&lt;img alt=&quot;130x130 I'm Speaking logo&quot; border=&quot;0&quot; height=&quot;130&quot; src=&quot;https://www.eclipsecon.org/europe2016/sites/default/files/ECEFriendsbright130x130Speaking.jpg&quot; width=&quot;130&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I’m sitting now in the train on my way to Ludwigsburg. For sure I cannot miss this great event, where so many smart people and friends come together. Although ECE is always at the same time of the year and I knew for long that I want to go there again, it comes not at the best time for me – or better: for my family. The reason is a really positive one: Almost 3 weeks ago on October 4th I became for the second time father of a lovely daughter, Sophia.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;IMG_1433.jpg&quot; class=&quot;  wp-image-732 aligncenter&quot; height=&quot;403&quot; src=&quot;https://kthoms.files.wordpress.com/2016/10/img_1433.jpg?w=403&amp;amp;h=403&quot; width=&quot;403&quot; /&gt;&lt;/p&gt;
&lt;p&gt;I am missing her already deeply, and my wife would need some supporting hands at home right now. However she understands that EclipseCon is important for me and supports me. The past weeks I did not get much sleep, but the reason was mostly not Sophia, but mainly preparing my talks – in the late evening and night it was most suitable. I will definitely enjoy EclipseCon, but this year I will also be happy when I can leave towards home again and will take 3 days off afterwards for regeneration and caring for the family.&lt;/p&gt;
&lt;p&gt;This year’s EclipseCon will be fully packed for me. Today, on Sunday, it will start with a small pre-conference event at the Rossknecht, where the Eclipse Scout community comes together. Tomorrow at the &lt;a href=&quot;https://www.eclipsecon.org/europe2016/unconference&quot;&gt;Unconference&lt;/a&gt; day I will attend the Eclipse Scout User Day, which I attended the past two years already. At the moment I do not work with Scout, but I really enjoyed working with this framework in the past and would like to do another project with it again. The recent year Scout has much evolved, and I am keen to learn all the news.&lt;/p&gt;
&lt;p&gt;On tuesday the Xtext developers plan to schedule a BoF Session. A beta of Xtext 2.11 was released this week, and we have to work much now to make the 2.11 release round. I plan to invest quite some time on this, and we have to talk about the concrete tasks and collaboration. Since we are now a team spanning several companies, it is important to have the chance to get the whole team together at EclipseCon.&lt;/p&gt;
&lt;p&gt;On wednesday it is time for action. I was recently contacted that the proposal for the session “&lt;a href=&quot;https://www.eclipsecon.org/europe2016/session/recipes-build-code-generators-non-xtext-models-xtend&quot;&gt;Recipes to build Code Generators for Non-Xtext Models with Xtend&lt;/a&gt;” got picked from the waiting list. I will perform the talk with my colleague and friend Holger Schill.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;screenshot 68.png&quot; class=&quot;alignnone size-full wp-image-750&quot; src=&quot;https://kthoms.files.wordpress.com/2016/10/screenshot-68.png?w=584&quot; /&gt;&lt;/p&gt;
&lt;p&gt;We give this talk because Xtend is a very nice language when it comes to developing template based code generators, but is mostly only used in the context of Xtext. Xtext projects seamlessly integrate a generator infrastructure with Xtend, but it is not that common to use Xtend based generators with models that are not Xtext DSL files. We will show how simple it can be to integrate Xtend for other use cases, e.g. with JSON as input.&lt;/p&gt;
&lt;p&gt;After that talk we will participate at the &lt;a href=&quot;https://www.eclipsecon.org/europe2016/session/modeling-symposium&quot;&gt;Modeling Symposium (17:45 Theater Stage)&lt;/a&gt;. There we will shortly (7 minutes slot only) present a generator fragment that creates an extension package for VisualStudio Code to embed support for a DSL with an embedded language server. The &lt;a href=&quot;https://github.com/Microsoft/language-server-protocol&quot;&gt;Language Server Protocol&lt;/a&gt; support is the main feature for Xtext 2.11. We plan to contribute the created generator fragment to the Xtext project.&lt;/p&gt;
&lt;p&gt;On thursday it is time for my talk “&lt;a href=&quot;https://www.eclipsecon.org/europe2016/session/stairway-heaven-highway-hell-xtext&quot;&gt;From stairway to heaven onto the highway to hell with Xtext&lt;/a&gt;” (11:00 Theater Stage). In this talk I will explain why I love Xtext and why it is used successfully in so many projects first, but then discuss where users have or run into trouble when using the framework. We see in many projects that first steps are easily done and don’t require much experience, but as requirements grow the complexity of DSL projects also grow and extensive experience with details of Xtext and the technologies behind is crucial. I hopefully compiled an informative set of issues.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;screenshot 69.png&quot; class=&quot;alignnone size-full wp-image-762&quot; src=&quot;https://kthoms.files.wordpress.com/2016/10/screenshot-69.png?w=584&quot; /&gt;&lt;/p&gt;
&lt;p class=&quot;page-header&quot;&gt;Right after this talk Holger will present “&lt;a href=&quot;https://www.eclipsecon.org/europe2016/session/xtext-beyond-defaults-how-tackle-performance-problems&quot;&gt;Xtext beyond the defaults – How to tackle performance problems&lt;/a&gt;” (Bürgersaal 2, 13:00). Our talks are quite related without overlapping much, so I recommend to join also his talk. I will address some issues regarding defaults and performance, but more from a general perspective. Holger will discuss them more detailed then.&lt;/p&gt;
&lt;p class=&quot;page-header&quot;&gt;Besides these talks I plan mostly to attend talks related to Xtext, language server, modeling, build, Che, DevOps and general Eclipse topics.&lt;/p&gt;
&lt;p class=&quot;page-header&quot;&gt;itemis has also a booth where you can find me often in the pauses. If you would like to discuss some stuff or get a small demo, just drop by.&lt;/p&gt;
&lt;p class=&quot;page-header&quot;&gt;I expect an intense conference with lots of excellent talks and nice chats with lots of people I met before, and look forward to get some more known. Either at the conference venue or of course at the Nestor bar later. The real conference is happening besides the conference! See you there!&lt;/p&gt;
&lt;p class=&quot;page-header&quot;&gt;~Karsten&lt;/p&gt;&lt;br /&gt;  &lt;a href=&quot;http://feeds.wordpress.com/1.0/gocomments/kthoms.wordpress.com/725/&quot; rel=&quot;nofollow&quot;&gt;&lt;img alt=&quot;&quot; border=&quot;0&quot; src=&quot;http://feeds.wordpress.com/1.0/comments/kthoms.wordpress.com/725/&quot; /&gt;&lt;/a&gt; &lt;img alt=&quot;&quot; border=&quot;0&quot; height=&quot;1&quot; src=&quot;https://pixel.wp.com/b.gif?host=kthoms.wordpress.com&amp;amp;blog=6829080&amp;amp;post=725&amp;amp;subd=kthoms&amp;amp;ref=&amp;amp;feed=1&quot; width=&quot;1&quot; /&gt;</description>
	<pubDate>Sun, 23 Oct 2016 15:02:07 +0000</pubDate>
</item>
<item>
	<title>Eike Stepper: Fancy Merge Support in CDO</title>
	<guid isPermaLink="false">tag:blogger.com,1999:blog-824652428103224164.post-5985530487210631204</guid>
	<link>http://thegordian.blogspot.com/2016/10/fancy-merge-support-in-cdo.html</link>
	<description>CDO's merge support has recently been enhanced in several ways. Please enjoy this 7:00 minutes screen-cast that I've recorded for you:&lt;br /&gt;&lt;br /&gt;&lt;div class=&quot;separator&quot; style=&quot;clear: both; text-align: center;&quot;&gt;&lt;/div&gt;&lt;br /&gt;If you'd like to learn more about CDO come to the EclipseCon Europe next week where I'll give a session on &lt;a href=&quot;https://www.eclipsecon.org/europe2016/session/cdo-application-programmers&quot; target=&quot;_blank&quot;&gt;CDO for Application Programmers&lt;/a&gt;. I'd be happy to meet you there!</description>
	<pubDate>Sat, 22 Oct 2016 06:01:12 +0000</pubDate>
	<author>noreply@blogger.com (Eike Stepper)</author>
</item>

</channel>
</rss>
